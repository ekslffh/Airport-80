package kr.or.ddit.Infra.rncSchedule.controller;

import java.time.Duration;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import org.apache.tiles.request.Request;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.Infra.rncReq.service.rncService;
import kr.or.ddit.Infra.rncSchedule.service.rncScheduleService;
import kr.or.ddit.Infra.vo.repairLogVO;
import kr.or.ddit.Infra.vo.rncReqVO;
import kr.or.ddit.Infra.vo.rncScheduleVO;
import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.vo.PaginationInfo;
import kr.or.ddit.vo.SimpleCondition;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@Controller
public class ScheduleRetrieveController {

	private final rncScheduleService service;

	private final rncService rncService;
	@ModelAttribute("Schedule")
	public rncScheduleVO rncSchedule() {
		return new rncScheduleVO();
	}
	@ModelAttribute("rncReq")
	public rncReqVO rncReq() {
		return new rncReqVO();
	}

	@GetMapping("/infra/rncScheduleList.do")
	public String rncScheduleList(@ModelAttribute("simpleCondition") SimpleCondition simpleCondition,
			@RequestParam(name = "page", required = false, defaultValue = "1") long currentPage, 
			@RequestParam(name = "deptSelect", required = false) String rrStts,
			@RequestParam(name = "tabs", required = false, defaultValue = "0") int tab,
			Model model) {

		PaginationInfo<rncScheduleVO> paging = new PaginationInfo<>(6, 5); // 스크린사이즈 블록사이즈 지정 가능
		paging.setCurrentPage(currentPage);
		paging.setSimpleCondition(simpleCondition);
		
		PaginationInfo<rncScheduleVO> wtPaging = new PaginationInfo<>(paging);
		PaginationInfo<rncScheduleVO> pgPaging = new PaginationInfo<>(paging);
		PaginationInfo<rncScheduleVO> dlPaging = new PaginationInfo<>(paging);
		PaginationInfo<rncScheduleVO> woPaging = new PaginationInfo<>(paging);
		PaginationInfo<rncScheduleVO> pcPaging = new PaginationInfo<>(paging);

		List<rncScheduleVO> schList = null;
		List<rncScheduleVO> wt= null;
		List<rncScheduleVO> pg= null;
		List<rncScheduleVO> dl= null;
		List<rncScheduleVO> wo= null;
		List<rncScheduleVO> pc= null;

		String logicalView=null;
		String tabs[] = new String[10];
		schList = service.retrieveScheduleList();
		
		wt = service.retrieveScheduleWt(wtPaging);
		pg = service.retrieveSchedulePg(pgPaging);
		dl = service.retrieveScheduleDl(dlPaging);
		wo = service.retrieveScheduleWo(woPaging);
		pc = service.retrieveSchedulePc(pcPaging);

		if (tab == 0) {
			tabs[0] = "active";
			tabs[5] = "show active";
		} else if (tab == 1) {
			tabs[1] = "active";
			tabs[6] = "show active";
		} else if (tab == 2) {
			tabs[2] = "active";
			tabs[7] = "show active";
		} else if (tab == 3) {
			tabs[4] = "active";
			tabs[7] = "show active";
		} else if (tab == 4) {
			tabs[4] = "active";
			tabs[7] = "show active";
		}
		
		if (tab == 0) {
		    paging.setDataList(schList); // 기본적으로 모든 데이터를 보여줄 때
		} else if (tab == 1) {
			paging.setDataList(wt); // 'WT' 탭 데이터를 보여줄 때
		} else if (tab == 2) {
			paging.setDataList(pg); // 'PG' 탭 데이터를 보여줄 때
		} else if (tab == 3) {
			paging.setDataList(dl); // 'DL' 탭 데이터를 보여줄 때
		} else if (tab == 4) {
			paging.setDataList(wo); // 'WO' 탭 데이터를 보여줄 때
		} else if (tab == 5) {
			paging.setDataList(pc); // 'PC' 탭 데이터를 보여줄 때
		} 
		String rsType=null;
		for (rncScheduleVO schedule : schList) {
			rsType = schedule.getRsType();
		}
		// 현재 날짜와 시간 얻기
		LocalDateTime currentDate = LocalDateTime.now();
		long daysPassed = 0;
		LocalDateTime registrationDate = null;
		rncReqVO rncReq = new rncReqVO();
		LocalDateTime rsStartTs= null;
		LocalDateTime endDate = null;
		ServiceResult update =null;
		String rsId = null;
		String rrRsId = null;
		long totalDaysPassed = 0;
		// 각 일정에 대한 처리
		for (rncScheduleVO schedule : schList) {
			schedule.getRsId();
			
		    registrationDate = schedule.getRsStartTs();
		    endDate = schedule.getRsEndTs();
		    currentDate = LocalDateTime.now(); // 현재 날짜 다시 설정
		    Duration duration = Duration.between(endDate, currentDate);
		    daysPassed = duration.toDays() + 1;
		    totalDaysPassed = duration.toDays() +1;
		    rsStartTs = schedule.getRsStartTs(); 

		    if(daysPassed < 0) {
		    	daysPassed = 0;
		    }

		    System.out.println("일정 ID: " + schedule.getRsId() + ", 일정 등록일로부터 지난 일 수: " + daysPassed + "일, " + "접수일로부터 총 소요일:" + totalDaysPassed);
		    schedule.setDaysPassed(daysPassed);
		    schedule.setTotalDaysPassed(totalDaysPassed);
		    
		    // dl 리스트에서 schedule과 같은 객체 찾기
		    rncScheduleVO foundItem = null;
		    
		    for (rncScheduleVO item : dl) {
		        if (item.equals(schedule)) {
		            foundItem = item;
		            break; // 일치하는 객체를 찾으면 루프를 종료합니다.
		        }
		    }
		    
		    // 해당하는 객체 찾은 경우
		    if (foundItem != null) {
		    	foundItem.setDaysPassed(daysPassed);
		    }
		    
		    rsId = schedule.getRsId();
		    System.out.println(schedule);
		    System.out.println(schedule.getDaysPassed());
		    System.out.println("currentDate.isBefore(endDate): " + currentDate.isBefore(endDate));
		    
		    
		    // 현재 날짜가 시작일보다 이전인 경우 'WT'로 설정
		    // 현재 날짜가 시작일을 경과한 경우 'PG'로 설정
		    // 현재 날짜가 종료일을 경과한 경우 'DL'로 설정 
		   
		        if (currentDate.isBefore(rsStartTs)) {
		            rncReq.setRrStts("WT");
		            rncReq.setRrRsId(rsId);
		            update = rncService.updateSttsWT(rsId);
		        } else if (currentDate.isBefore(rsStartTs)) {
		            rncReq.setRrStts("PG");
		            rncReq.setRrRsId(rsId);
		            update = rncService.updateSttsPG(rsId);
		        } else if (currentDate.isAfter(endDate)) {
		            rncReq.setRrStts("DL");
		            rncReq.setRrRsId(rsId);
		            update = rncService.updateSttsDL(rsId);
		        
		    }
		}
		
		model.addAttribute("tabs", tabs);
		model.addAttribute("schList", schList);
		model.addAttribute("currentDate", currentDate);
		model.addAttribute("daysPassed", daysPassed);
		model.addAttribute("wt",wt);
		model.addAttribute("pg",pg);
		model.addAttribute("dl",dl);
		model.addAttribute("wo",wo);
		model.addAttribute("pc",pc);
		model.addAttribute("paging", paging);
		
		model.addAttribute("wtPaging", wtPaging);
		model.addAttribute("pgPaging", pgPaging);
		model.addAttribute("dlPaging", dlPaging);
		model.addAttribute("woPaging", woPaging);
		model.addAttribute("pcPaging", pcPaging);
		logicalView = "infra/rncSchedule/rncScheduleList";
//		}
		return logicalView;
	}
	

	@GetMapping("/infra/recScheduleList.do")
	public String recScheduleList(@ModelAttribute("simpleCondition") SimpleCondition simpleCondition,
			@RequestParam(name = "page", required = false, defaultValue = "1") long currentPage, 
			@RequestParam(name = "deptSelect", required = false) String rrStts,
			@RequestParam(name = "tabs", required = false, defaultValue = "0") int tab,
			Model model) {

		PaginationInfo<rncScheduleVO> paging = new PaginationInfo<>(6, 5); // 스크린사이즈 블록사이즈 지정 가능
		paging.setCurrentPage(currentPage);
		paging.setSimpleCondition(simpleCondition);
		
		PaginationInfo<rncScheduleVO> wtPaging = new PaginationInfo<>(paging);
		PaginationInfo<rncScheduleVO> pgPaging = new PaginationInfo<>(paging);
		PaginationInfo<rncScheduleVO> pcPaging = new PaginationInfo<>(paging);

		List<rncScheduleVO> schList = null;
		List<rncScheduleVO> wt= null;
		List<rncScheduleVO> pg= null;
		List<rncScheduleVO> pc= null;

		String logicalView=null;
		String tabs[] = new String[10];
		schList = service.retrieveRecScheduleList();
		wt = service.cRetrieveScheduleWt(wtPaging);
		pg = service.cRetrieveSchedulePg(pgPaging);
		pc = service.cRetrieveSchedulePc(pcPaging);

		if (tab == 1) {
			tabs[1] = "active";
			tabs[4] = "show active";
		} else if (tab == 1) {
			tabs[2] = "active";
			tabs[5] = "show active";
		} else if (tab == 2) {
			tabs[3] = "active";
			tabs[6] = "show active";
		} 
		
		if (tab == 0) {
		    paging.setDataList(schList); // 기본적으로 모든 데이터를 보여줄 때
		} else if (tab == 1) {
			paging.setDataList(wt); // 'WT' 탭 데이터를 보여줄 때
		} else if (tab == 2) {
			paging.setDataList(pg); // 'PG' 탭 데이터를 보여줄 때
		}  else if (tab == 3) {
			paging.setDataList(pc); // 'PC' 탭 데이터를 보여줄 때
		} 
		
		String rsType=null;
		for (rncScheduleVO schedule : schList) {
			rsType = schedule.getRsType();
		}
		// 현재 날짜와 시간 얻기
		LocalDateTime currentDate = LocalDateTime.now();
		long daysPassed = 0;
		LocalDateTime registrationDate = null;
		rncReqVO rncReq = new rncReqVO();
		LocalDateTime rsStartTs= null;
		LocalDateTime endDate = null;
		ServiceResult update =null;
		String rsId = null;
		String rrRsId = null;
		
		// 각 일정에 대한 처리
		for (rncScheduleVO schedule : schList) {
			schedule.getRsId();
			
		    registrationDate = schedule.getRsStartTs();
		    endDate = schedule.getRsEndTs();
		    currentDate = LocalDateTime.now(); // 현재 날짜 다시 설정
		    rsStartTs = schedule.getRsStartTs(); 
		    if(daysPassed < 0) {
		    	daysPassed = 0;
		    }

		
		    
		    rsId = schedule.getRsId();
		
		    // 현재 날짜가 시작일보다 이전인 경우 'WT'로 설정
		    // 현재 날짜가 시작일을 경과한 경우 'PG'로 설정
		    // 현재 날짜가 종료일을 경과한 경우 'DL'로 설정 
		   
		        if (currentDate.isBefore(rsStartTs)) {
		            rncReq.setRrStts("WT");
		            rncReq.setRrRsId(rsId);
		            update = rncService.CupdateSttsWT(rsId);
		        }else if(currentDate.isAfter(rsStartTs)) {
		        	rncReq.setRrStts("PG");
		        	rncReq.setRrRsId(rsId);
		        	update = rncService.updateSttsPG(rsId);
		        }
		}
		        
		
		
		model.addAttribute("tabs", tabs);
		model.addAttribute("schList", schList);
		model.addAttribute("currentDate", currentDate);
//		model.addAttribute("daysPassed", daysPassed);
		model.addAttribute("wt",wt);
		model.addAttribute("pg",pg);
		model.addAttribute("pc",pc);
		model.addAttribute("paging", paging);
		                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
		model.addAttribute("wtPaging", wtPaging);
		model.addAttribute("pgPaging", pgPaging);
		model.addAttribute("pcPaging", pcPaging);
		
		return "infra/rncSchedule/recScheduleList2";
	}

	}
